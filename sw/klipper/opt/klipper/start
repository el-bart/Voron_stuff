#!/bin/bash
set -eu -o pipefail
app=$(basename "$0")
app_dir=$(dirname "$(readlink -e "$0")")
cd "$app_dir"

# generate HTTPS certs for server
(
  cert_dir="$app_dir/nginx/certs"
  mkdir -p  "$cert_dir"
  chmod 700 "$cert_dir"

  dh="$cert_dir/dhparam.pem"
  if ! [ -f "$dh" ]
  then
    echo "$app: Diffie-Hellman parameter file is not there - generating (be patiend - this can take time)"
    rm -f "$dh.tmp"
    openssl dhparam -out "$dh.tmp" 4096
    mv "$dh.tmp" "$dh"
  fi

  # TODO: generate server cert and key (self-signed)
)

# configure API key, if it's not there yet
(
  set +x # just in case
  cfg="/opt/klipper/klipperscreen/data/config/klipperscreen.cfg"
  placeholder="MOONRAKER_API_KEY_PLACEHOLDER"
  if grep -q "$placeholder" "$cfg"
  then
    db="/opt/klipper/moonraker/data/data/database/moonraker-sql.db"
    query='SELECT password FROM authorized_users WHERE username="_API_KEY_USER_";'
    if ! [ -f "$db" ]
    then
      echo "$app: WARNING: moonraker was never before - API key is not there" >&2
      echo "$app: WARNING: proceeding anyway - key should be available after restart or manual key setup" >&2
      exit 0
    fi
    echo "$app: substituting moonraker's key placeholder with actual API key"
    key=$(sqlite3 "$db" "$query")
    sed -i "s#$placeholder#$key#" "$cfg"
  fi
)

# TODO: temporary workaround
if [ -z "${DISPLAY:-}" ]
then
  export DISPLAY=:0
fi

# make sure X11 is up
while ! xrandr
do
  echo "$app: waiting for X11 to be up and running..." >&2
  sleep 1
done

# start the system
exec docker-compose up --timeout 2 --build
